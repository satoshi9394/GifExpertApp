{"version":3,"sources":["components/AddCategory.jsx","components/helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","components/hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategoris","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","newValue","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","AddCategory","ReactDOM","render","document","getElementById"],"mappings":"gPAGMA,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAjBsB,SAAEP,GAC5B,IAAMQ,EAAWR,EAAES,OAAOH,MAC1BR,EAAcU,QAqBlBd,EAAagB,UAAY,CACvBf,c,OAAegB,EAAUC,KAAKC,YAGjBnB,Q,uBCjBAoB,EAfF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UAAUH,GADlD,+DAEII,MAAMF,GAFV,cAERG,EAFQ,gBAGSA,EAAIC,OAHb,uBAGNC,EAHM,EAGNA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAYPM,GAZO,4CAAH,sDCWEO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OACE,yBAAKc,UAAU,4DACb,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAKA,KCqBIO,EAxBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjC0B,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAPAC,qBAAW,WACTxB,EAAQC,GACLwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACrBf,KAAMkB,EACNL,SAAS,SAEZ,CAACpB,IACGqB,EDV2BK,CAAa1B,GAAjCa,EAFgB,EAEtBN,KAAea,EAFO,EAEPA,QAEvB,OACE,oCACE,wBAAIJ,UAAU,sDAAsDhB,GAElEoB,GAAW,uBAAGJ,UAAU,qDAAb,cAEb,yBAAKA,UAAU,aAEXH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACJD,UEgBJkB,EA9BM,WAAO,IAAD,EAEW/C,mBAAS,CAAC,cAFrB,mBAElBgD,EAFkB,KAENjD,EAFM,KAWzB,OACE,6BACE,4CACA,kBAACkD,EAAD,CAAalD,cAAgBA,IAC7B,6BACA,4BAEIiD,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACEA,SAAUA,EACV2B,IAAK3B,U,MClBnB+B,IAASC,OAAQ,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.4538cfab.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategoris = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInpuntChanges = ( e ) => {\r\n    const newValue = e.target.value;\r\n    setinputValue(newValue)\r\n  } \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [ inputValue, ...cats ]);\r\n      setinputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInpuntChanges }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategoris.prototype = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategoris;\r\n","\r\nconst getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RLnaxIFpwB9iUhmoXZUq1ln0ZjRWPAX9`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\r\n      <img src={ url } alt={title}/>\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n  const { data: images , loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-1\">{category}</h3>\r\n      {\r\n        loading && <p className=\"animate__animated animate__flash animate__delay-1\">Loading...</p>\r\n      }\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem \r\n              key={img.id}\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n      .then(imgs => setstate({\r\n        data: imgs,\r\n        loading: false\r\n      }))\r\n  }, [category]) \r\n  return state\r\n}","import React, { useState } from 'react'\r\n//components\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n  // const handleAdd = () => {\r\n    // const newSerie = 'HunterX';\r\n    // setCategories([ newSerie, ...categories ]);\r\n    // setCategories( cats => [ newSerie, ...cats ]);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories }/>\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categories.map( category => \r\n            <GifGrid \r\n              category={category} \r\n              key={category}\r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//components\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( <GifExpertApp /> ,document.getElementById('root') );\n\n\n//TODO: \n// GifExpertApp\n// <h2>GifExpertApp</h2>\n//<hr/>"],"sourceRoot":""}